services:
  scheduler-postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: scheduling-service
      POSTGRES_USER: scheduler_user
      POSTGRES_PASSWORD: scheduler_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - medicare-network
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: medicare-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - medicare-network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: medicare-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "29092:29092"
    networks:
      - medicare-network
    restart: unless-stopped

  user-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: user-service
    container_name: medicare-user-service
    ports:
      - "8082:8080"
    networks:
      - medicare-network
    restart: unless-stopped

  scheduling-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: scheduling-service
    container_name: medicare-scheduling-service
    depends_on:
      - scheduler-postgres
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/scheduling-service
      SPRING_DATASOURCE_USERNAME: medicare_user
      SPRING_DATASOURCE_PASSWORD: medicare_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8081:8081"
    networks:
      - medicare-network
    restart: unless-stopped

  notification-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: notification-service
    container_name: medicare-notification-service
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8080:8080"
    networks:
      - medicare-network
    restart: unless-stopped

networks:
  medicare-network:
    driver: bridge

volumes:
  postgres_data:
